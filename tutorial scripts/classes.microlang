#make a class
class basicClass [ ]
{
    #init function runs at initalisation
    func __init__ [ flt arg1 , flt arg2 ] -> void
    {
        #create instance variables
        make flt self.arg1 = arg1
        make flt self.arg2 = arg2
    }
    #other functions
    func addValues [ flt value ] -> flt
    {
        make flt c = self.arg1 + self.arg2 + value
        return c
    }
}
#make class instance
make instance classInstance = new basicClass [ 7 , 8 ]
#run instance function
make flt x = classInstance . addValues [ 5 ]

#inheritance. Can only inherit one object
class childClass [ basicClass ]
{
    #init function
    func __init__ [ flt arg3 , flt arg4 ] -> void
    {
        #initalise parent
        parent.__init__ [ arg3 , arg4 ]
        make flt self.arg3 = arg3
        make flt self.arg4 = arg4
    }
    #other function
    func subtractValues [ flt value ] -> flt
    {
        make flt c = self.arg3 - self.arg4 - value
        return c
    }
}

make instance classWithParent = new childClass [ 0 , 8 ]